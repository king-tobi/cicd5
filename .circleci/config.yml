version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.0.3

commands:
   # Exercise - Rollback
   destroy_environment:
     steps:
       - run:
           name: Destroy environment
           when: on_fail
           # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
           # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
           command: |
             aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID}

jobs: 

  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID} \
              --region us-east-1
      
  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["7a:20:e4:88:52:95:18:f9:46:61:9a:a6:08:37:f2:cf"]
      - run:
          name: Install Ansible
          command: |
            apk add --update ansible   
      - run:
          name: Run Playbook and Configure server
          command: |
            ansible-playbook -i inventory.txt main-remote.yml

  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
          name: smoke test
          command: |
            URL="https://blog.udacity.com/"
            # Test if website exists
            if curl -s --head ${URL} 
            then
              return 0
            else
              return 1
            fi

  failed_smoke_test:
    docker: 
      - image: alpine:latest
    steps:
      - checkout
      - run:
          name: simulate error
          # Fail the job intentionally to simulate an error. so it can rollback
          command:  |
            return 1
      - destroy_environment

workflows:
  my_workflow:
    jobs:
      - create_infrastructure
      #- configure_infrastructure
      #- smoke_test
      - failed_smoke_test:
          requires:
           - create_infrastructure
      